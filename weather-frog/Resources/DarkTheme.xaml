<ResourceDictionary x:Class="weatherfrog.Themes.DarkTheme"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=netstandard">

    <SolidColorBrush x:Key="BackgroundColor"
                     Color="#FF1C1C1C" />
    <SolidColorBrush x:Key="ContainerBackground"
                     Color="#FF272727" />
    <SolidColorBrush x:Key="ControlBrightDefaultBackground"
                     Color="#FF3F3F46" />
    <SolidColorBrush x:Key="ControlBrightDefaultBorderBrush"
                     Color="#FF54545C" />
    <SolidColorBrush x:Key="ControlDefaultForeground"
                     Color="#FFEBEBEB" />
    <SolidColorBrush x:Key="ControlDefaultBackground"
                     Color="#FF2D2D2D" />
    <SolidColorBrush x:Key="ControlDefaultBorderBrush"
                     Color="#FF323232" />
    <SolidColorBrush x:Key="ControlGlythColor"
                     Color="#FFEBEBEB" />
    <SolidColorBrush x:Key="ControlDisabledGlythColor"
                     Color="#FFA0A0A0" />
    <SolidColorBrush x:Key="ControlMouseOverBackground"
                     Color="#FF54545C" />
    <SolidColorBrush x:Key="ControlMouseOverBorderBrush"
                     Color="#FF6A6A75" />
    <SolidColorBrush x:Key="ControlPrimaryColorBackground"
                     Color="#FF2084E8" />
    <SolidColorBrush x:Key="ControlBrightPrimaryColorBorderBrush"
                     Color="#FF50A4FA" />
    <SolidColorBrush x:Key="ControlSelectedBackground"
                     Color="#FF007ACC" />
    <SolidColorBrush x:Key="ControlSelectedBorderBrush"
                     Color="#FF1C97EA" />
    <SolidColorBrush x:Key="WindowBorderColor"
                     Color="#FF343434" />
    <SolidColorBrush x:Key="ScrollBarPageButtonBackgroundHighlighted"
                     Color="#05FFFFFF" />
    <SolidColorBrush x:Key="CheckBoxInvalidUnfocusedBorderBrush"
                     Color="#FFF55E7F" />
    <SolidColorBrush x:Key="CheckBoxInvalidFocusedBorderBrush"
                     Color="#FFD0284C" />
    <SolidColorBrush x:Key="CheckBoxCheckBackgroundBrush"
                     Color="#FF00AADE" />

    <system:Double x:Key="ControlHeight">32</system:Double>

    <!-- Focus Visual -->
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle StrokeDashArray="1 2"
                               StrokeThickness="1"
                               Stroke="{StaticResource ControlBrightPrimaryColorBorderBrush}"
                               SnapsToDevicePixels="true"
                               Margin="2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button -->
    <Style TargetType="{x:Type Button}">
        <Setter Property="Width"
                Value="80" />
        <Setter Property="Height"
                Value="{StaticResource ControlHeight}" />
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource FocusVisual}" />
        <Setter Property="Background"
                Value="{StaticResource ControlBrightDefaultBackground}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ControlDefaultBorderBrush}" />
        <Setter Property="Foreground"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch">
                        <ContentPresenter x:Name="contentPresenter"
                                          Focusable="False"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource ControlMouseOverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource ControlMouseOverBackground}" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource ControlMouseOverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource ControlSelectedBackground}" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource ControlSelectedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="{StaticResource ControlDefaultBackground}" />
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource ControlBrightDefaultBorderBrush}" />
                            <Setter Property="TextElement.Foreground"
                                    TargetName="contentPresenter"
                                    Value="{StaticResource ControlDisabledGlythColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--CheckBox-->
    <Style TargetType="CheckBox">
        <Setter Property="Foreground"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="3,0,0,0" />
        <Setter Property="MinHeight"
                Value="30" />
        <Setter Property="MinWidth"
                Value="30" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid Background="Transparent">
                        <Grid.Resources>
                            <Style x:Key="StandardRectangle"
                                   TargetType="{x:Type Rectangle}">
                                <Setter Property="StrokeThickness"
                                        Value="1" />
                                <Setter Property="Width"
                                        Value="18" />
                                <Setter Property="Height"
                                        Value="18" />
                            </Style>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To=".7"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="hover" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="pressed" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <!--<DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" />-->
                                        <DoubleAnimation Duration="0"
                                                         To=".25"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="disabled" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="checkBox" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="IndeterminateCheck" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="focused" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="invalidUnfocused" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="invalidFocused" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Fill="Transparent" />
                        <Rectangle x:Name="normal"
                                   Opacity="1"
                                   Stroke="{StaticResource ControlDefaultBorderBrush}"
                                   Fill="{StaticResource ControlBrightDefaultBackground}"
                                   Style="{StaticResource StandardRectangle}" />
                        <Rectangle x:Name="pressed"
                                   Opacity="0"
                                   Stroke="{StaticResource ControlSelectedBorderBrush}"
                                   Fill="{StaticResource ControlSelectedBackground}"
                                   Style="{StaticResource StandardRectangle}" />
                        <Rectangle x:Name="focused"
                                   Opacity="0"
                                   Stroke="{StaticResource ControlSelectedBorderBrush}"
                                   Fill="{StaticResource ControlSelectedBackground}"
                                   Style="{StaticResource StandardRectangle}" />
                        <Rectangle x:Name="hover"
                                   Opacity="0"
                                   Stroke="{StaticResource ControlMouseOverBorderBrush}"
                                   Fill="{StaticResource ControlMouseOverBackground}"
                                   Style="{StaticResource StandardRectangle}" />
                        <Rectangle x:Name="invalidUnfocused"
                                   Opacity="0"
                                   Stroke="{StaticResource CheckBoxInvalidUnfocusedBorderBrush}"
                                   Fill="{StaticResource ControlGlythColor}"
                                   Style="{StaticResource StandardRectangle}" />
                        <Rectangle x:Name="invalidFocused"
                                   Opacity="0"
                                   Stroke="{StaticResource CheckBoxInvalidFocusedBorderBrush}"
                                   Fill="{StaticResource ControlGlythColor}"
                                   Style="{StaticResource StandardRectangle}" />
                        <Path x:Name="checkBox"
                              Height="10"
                              Width="12"
                              Stretch="Fill"
                              Opacity="0"
                              Fill="{StaticResource CheckBoxCheckBackgroundBrush}"
                              UseLayoutRounding="False"
                              Data="M 1145.607177734375,430 C1145.607177734375,430 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 
                              1141.449951171875,435.0772705078125 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1139.232177734375,
                              433.0999755859375 1138,434.5538330078125 1138,434.5538330078125 1138,434.5538330078125 1141.482177734375,438 1141.482177734375,
                              438 1141.482177734375,438 1141.96875,437.9375 1141.96875,437.9375 1141.96875,437.9375 1147,431.34619140625 1147,431.34619140625 
                              1147,431.34619140625 1145.607177734375,430 1145.607177734375,430 z" />
                        <Rectangle x:Name="IndeterminateCheck"
                                   Fill="{StaticResource ControlDisabledGlythColor}"
                                   Height="3"
                                   Width="8"
                                   Opacity="0" />
                        <Rectangle x:Name="disabled"
                                   Opacity="0"
                                   Fill="Black"
                                   Style="{StaticResource StandardRectangle}" />
                        <ContentPresenter x:Name="contentPresenter"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          Grid.Column="1"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ComboBox-->
    <ControlTemplate x:Key="ComboBoxToggleButton"
                     TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border SnapsToDevicePixels="True"
                    x:Name="Border"
                    Grid.ColumnSpan="2"
                    Background="{StaticResource ContainerBackground}"
                    BorderBrush="{StaticResource ControlDefaultBorderBrush}"
                    BorderThickness="1" />
            <Path x:Name="Arrow"
                  Grid.Column="1"
                  Opacity="0.6"
                  Fill="{StaticResource ControlDefaultForeground}"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M 0 0 L 4 4 L 8 0 Z" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="true">
                <Setter TargetName="Arrow"
                        Property="Opacity"
                        Value="1" />
                <Setter TargetName="Border"
                        Property="BorderBrush"
                        Value="{StaticResource ControlMouseOverBorderBrush}" />
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="true">
                <Setter TargetName="Arrow"
                        Property="Opacity"
                        Value="1" />
                <Setter TargetName="Arrow"
                        Property="Fill"
                        Value="{StaticResource ControlSelectedBackground}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox"
                     TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost"
                Focusable="False"
                Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style TargetType="{x:Type ComboBox}"
           x:Key="ComboboxStyle">
        <Style.Resources>
            <Style TargetType="{x:Type ComboBoxItem}">
                <Setter Property="SnapsToDevicePixels"
                        Value="true" />
                <Setter Property="OverridesDefaultStyle"
                        Value="true" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                            <Border x:Name="Border"
                                    Padding="2"
                                    SnapsToDevicePixels="true"
                                    BorderThickness="1">
                                <ContentPresenter HorizontalAlignment="Stretch" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsHighlighted"
                                         Value="true">
                                    <Setter TargetName="Border"
                                            Property="Background"
                                            Value="{StaticResource ControlSelectedBackground}" />
                                    <Setter TargetName="Border"
                                            Property="BorderBrush"
                                            Value="{StaticResource ControlSelectedBorderBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        <Setter Property="Height"
                Value="{StaticResource ControlHeight}" />
        <Setter Property="Foreground"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="True" />
        <Setter Property="MinWidth"
                Value="50" />
        <Setter Property="MinHeight"
                Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Grid.Resources>
                            <Style TargetType="TextBlock">
                                <Setter Property="Margin"
                                        Value="6" />
                                <Setter Property="HorizontalAlignment"
                                        Value="Stretch" />
                            </Style>
                        </Grid.Resources>
                        <ToggleButton x:Name="ToggleButton"
                                      Template="{StaticResource ComboBoxToggleButton}"
                                      Grid.Column="2"
                                      Focusable="false"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press" />
                        <ContentPresenter x:Name="ContentSite"
                                          IsHitTestVisible="False"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          Margin="1,0,23,0"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                                 CaretBrush="{StaticResource ControlDefaultForeground}"
                                 Style="{x:Null}"
                                 Template="{StaticResource ComboBoxTextBox}"
                                 VerticalAlignment="Center"
                                 Margin="2,0,25,0"
                                 Focusable="True"
                                 Background="Transparent"
                                 Foreground="{StaticResource ControlDefaultForeground}"
                                 Visibility="Hidden"
                                 IsReadOnly="{TemplateBinding IsReadOnly}" />
                        <Rectangle x:Name="DisabledRectangle"
                                   Fill="Black"
                                   Opacity=".25"
                                   Visibility="Hidden" />
                        <Popup VerticalOffset="-1"
                               SnapsToDevicePixels="True"
                               x:Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Slide">
                            <Grid x:Name="DropDown"
                                  SnapsToDevicePixels="True"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                        Background="{StaticResource BackgroundColor}"
                                        BorderThickness="1"
                                        BorderBrush="{StaticResource ControlBrightDefaultBorderBrush}">
                                </Border>
                                <ScrollViewer SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True"
                                                KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems"
                                 Value="false">
                            <Setter TargetName="DropDownBorder"
                                    Property="MinHeight"
                                    Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping"
                                 Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false" />
                        </Trigger>
                        <Trigger Property="IsEditable"
                                 Value="True">
                            <Setter Property="IsTabStop"
                                    Value="False" />
                            <Setter TargetName="PART_EditableTextBox"
                                    Property="Visibility"
                                    Value="Visible" />
                            <Setter TargetName="ContentSite"
                                    Property="Visibility"
                                    Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="DisabledRectangle"
                                    Property="Visibility"
                                    Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ContextMenu -->
    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="Background"
                Value="{StaticResource ControlDefaultBackground}" />
        <Setter Property="Foreground"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ControlDefaultBorderBrush}" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Grid.IsSharedSizeScope"
                Value="true" />
        <Setter Property="HasDropShadow"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="2">
                        <ScrollViewer x:Name="ScrollViewer"
                                      VerticalScrollBarVisibility="Hidden">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style TargetType="{x:Type MenuItem}">
        <Setter Property="Background"
                Value="{StaticResource }" />
        <Setter Property="Background"
                Value="{StaticResource ControlDefaultBackground}" />
        <Setter Property="Foreground"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ControlDefaultBorderBrush}" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Grid.IsSharedSizeScope"
                Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Border">
                        <Grid>
                            <ContentPresenter Margin="6,3,6,3"
                                              ContentSource="Header"
                                              RecognizesAccessKey="True" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--GridSplitter-->
    <Style TargetType="GridSplitter">
        <Setter Property="Background"
                Value="Transparent"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridSplitter}">
                    <Border x:Name="body"
                            Background="{StaticResource ControlBrightDefaultBackground}">
                        <TextBlock HorizontalAlignment="Center"
                                   IsHitTestVisible="False"
                                   VerticalAlignment="Center"
                                   Text="&#xE784;"
                                   Foreground="{StaticResource ControlDefaultForeground}"
                                   FontFamily="Segoe MDL2 Assets" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="body"
                                    Value="{StaticResource ControlPrimaryColorBackground }" />
                        </Trigger>
                        <Trigger Property="IsDragging"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="body"
                                    Value="{StaticResource ControlSelectedBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ListBox-->
    <Style TargetType="ListBox">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Foreground"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
    </Style>

    <!--ScrollBars-->
    <Style x:Key="ScrollBarLineButton"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="Background"
                Value="{StaticResource ControlDefaultBackground}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ControlDefaultBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1">
                        <Path HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Fill="{StaticResource ControlDefaultForeground}"
                              Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{StaticResource ControlMouseOverBackground}" />
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ControlMouseOverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="Background"
                                    Value="{StaticResource ControlSelectedBackground}" />
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ControlSelectedBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButton"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="{StaticResource ScrollBarPageButtonBackgroundHighlighted}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ScrollBarThumb"
           TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="Background"
                Value="{StaticResource ControlBrightDefaultBackground}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ControlBrightDefaultBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{StaticResource ControlMouseOverBackground}" />
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ControlMouseOverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsDragging"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{StaticResource ControlSelectedBackground}" />
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource ControlSelectedBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar"
                     TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="18" />
                <RowDefinition />
                <RowDefinition Height="18" />
            </Grid.RowDefinitions>
            <RepeatButton Grid.Row="0"
                          Style="{StaticResource ScrollBarLineButton}"
                          Content="M 0 4 L 8 4 L 4 0 Z"
                          Command="ScrollBar.LineUpCommand" />
            <Track x:Name="PART_Track"
                   Grid.Row="1"
                   IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="2"
                          Style="{StaticResource ScrollBarLineButton}"
                          Command="ScrollBar.LineDownCommand"
                          Content="M 0 0 L 4 4 L 8 0 Z" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar"
                     TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="18" />
                <ColumnDefinition />
                <ColumnDefinition Width="18" />
            </Grid.ColumnDefinitions>
            <RepeatButton Grid.Column="0"
                          Style="{StaticResource ScrollBarLineButton}"
                          Content="M 0 4 L 4 8 L 4 0 Z"
                          Command="ScrollBar.LineLeftCommand" />
            <Track x:Name="PART_Track"
                   Grid.Column="1"
                   IsDirectionReversed="false">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Column="2"
                          Style="{StaticResource ScrollBarLineButton}"
                          Content="M 4 4 L 0 8 L 0 0 Z"
                          Command="ScrollBar.LineRightCommand" />
        </Grid>
    </ControlTemplate>

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation"
                     Value="Vertical">
                <Setter Property="Width"
                        Value="12" />
                <Setter Property="Height"
                        Value="Auto" />
                <Setter Property="Template"
                        Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation"
                     Value="Horizontal">
                <Setter Property="Height"
                        Value="12" />
                <Setter Property="Width"
                        Value="Auto" />
                <Setter Property="Template"
                        Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--TabControl-->
    <Style TargetType="{x:Type TabControl}">
        <Style.Resources>
            <Style TargetType="{x:Type TabItem}">
                <Setter Property="FocusVisualStyle"
                        Value="{x:Null}" />
                <Setter Property="Background"
                        Value="Transparent" />
                <Setter Property="Foreground"
                        Value="{StaticResource ControlDefaultForeground}" />
                <Setter Property="BorderBrush"
                        Value="Transparent" />
                <Setter Property="Margin"
                        Value="-1,0,0,0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Border x:Name="PART_Border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter ContentSource="Header"
                                                  Margin="10,5" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <!--<MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="TabItem.TabStripPlacement" Value="Top"/>
                                        <Condition Property="IsSelected" Value="false" />
                                    </MultiTrigger.Conditions>
                                </MultiTrigger>-->

                                <Trigger Property="IsSelected"
                                         Value="false">
                                    <Setter Property="Background"
                                            Value="Transparent" />
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                         Value="true">
                                    <Setter Property="Background"
                                            Value="{DynamicResource ControlSelectedBorderBrush}" />
                                    <Setter Property="BorderBrush"
                                            Value="{DynamicResource ControlSelectedBorderBrush}" />
                                </Trigger>
                                <Trigger Property="IsSelected"
                                         Value="true">
                                    <Setter Property="Background"
                                            Value="{DynamicResource ControlSelectedBackground}" />
                                </Trigger>
                                <Trigger Property="TabItem.TabStripPlacement"
                                         Value="Top">
                                    <Setter Property="BorderThickness"
                                            Value="1,1,1,0" />
                                    <Setter Property="BorderBrush"
                                            Value="{DynamicResource ControlSelectedBackground}" />
                                </Trigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="TabItem.TabStripPlacement"
                                                   Value="Top" />
                                        <Condition Property="IsSelected"
                                                   Value="true" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="BorderBrush"
                                            Value="{StaticResource ControlSelectedBackground}" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="True"
                          SnapsToDevicePixels="True"
                          KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Name="ColumnDefinition0" />
                            <ColumnDefinition Width="0"
                                              Name="ColumnDefinition1" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"
                                           Name="RowDefinition0" />
                            <RowDefinition Height="*"
                                           Name="RowDefinition1" />
                        </Grid.RowDefinitions>

                        <ScrollViewer HorizontalScrollBarVisibility="Auto"
                                      VerticalScrollBarVisibility="Auto">
                            <Border x:Name="HeaderBorder"
                                    BorderThickness="0,0,0,1"
                                    BorderBrush="{DynamicResource ControlSelectedBackground}">
                                <TabPanel IsItemsHost="True"
                                          Name="HeaderPanel"
                                          Panel.ZIndex="1"
                                          Margin="5,0,4,-1"
                                          KeyboardNavigation.TabIndex="1"
                                          Grid.Column="0"
                                          Grid.Row="0" />
                            </Border>
                        </ScrollViewer>

                        <Grid Name="ContentPanel"
                              KeyboardNavigation.TabIndex="2"
                              KeyboardNavigation.TabNavigation="Local"
                              KeyboardNavigation.DirectionalNavigation="Contained"
                              Grid.Column="0"
                              Grid.Row="1">
                            <Border Background="{TemplateBinding Background}">
                                <ContentPresenter Content="{TemplateBinding SelectedContent}"
                                                  ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                                  ContentStringFormat="{TemplateBinding SelectedContentStringFormat}"
                                                  ContentSource="SelectedContent"
                                                  Name="PART_SelectedContentHost"
                                                  Margin="5"
                                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                            </Border>
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="TabControl.TabStripPlacement"
                                 Value="Bottom">
                            <Setter TargetName="HeaderPanel"
                                    Property="Grid.Row"
                                    Value="1" />
                            <Setter TargetName="ContentPanel"
                                    Property="Grid.Row"
                                    Value="0" />
                            <Setter TargetName="RowDefinition0"
                                    Property="RowDefinition.Height"
                                    Value="*" />
                            <Setter TargetName="RowDefinition1"
                                    Property="RowDefinition.Height"
                                    Value="Auto" />
                            <Setter TargetName="HeaderPanel"
                                    Property="FrameworkElement.Margin"
                                    Value="0,-1,4,0" />
                            <Setter TargetName="HeaderBorder"
                                    Property="Border.BorderThickness"
                                    Value="0,1,0,0" />
                        </Trigger>
                        <Trigger Property="TabControl.TabStripPlacement"
                                 Value="Left">
                            <Setter TargetName="HeaderPanel"
                                    Property="Grid.Row"
                                    Value="0" />
                            <Setter TargetName="ContentPanel"
                                    Property="Grid.Row"
                                    Value="0" />
                            <Setter TargetName="HeaderPanel"
                                    Property="Grid.Column"
                                    Value="0" />
                            <Setter TargetName="ContentPanel"
                                    Property="Grid.Column"
                                    Value="1" />
                            <Setter TargetName="ColumnDefinition0"
                                    Property="ColumnDefinition.Width"
                                    Value="Auto" />
                            <Setter TargetName="ColumnDefinition1"
                                    Property="ColumnDefinition.Width"
                                    Value="*" />
                            <Setter TargetName="RowDefinition0"
                                    Property="RowDefinition.Height"
                                    Value="*" />
                            <Setter TargetName="RowDefinition1"
                                    Property="RowDefinition.Height"
                                    Value="0" />
                            <Setter TargetName="HeaderPanel"
                                    Property="FrameworkElement.Margin"
                                    Value="0,20,-1,4" />
                            <Setter TargetName="HeaderBorder"
                                    Property="Border.BorderThickness"
                                    Value="0,0,1,0" />
                        </Trigger>
                        <Trigger Property="TabControl.TabStripPlacement"
                                 Value="Right">
                            <Setter TargetName="HeaderPanel"
                                    Property="Grid.Row"
                                    Value="0" />
                            <Setter TargetName="ContentPanel"
                                    Property="Grid.Row"
                                    Value="0" />
                            <Setter TargetName="HeaderPanel"
                                    Property="Grid.Column"
                                    Value="1" />
                            <Setter TargetName="ContentPanel"
                                    Property="Grid.Column"
                                    Value="0" />
                            <Setter TargetName="ColumnDefinition0"
                                    Property="ColumnDefinition.Width"
                                    Value="*" />
                            <Setter TargetName="ColumnDefinition1"
                                    Property="ColumnDefinition.Width"
                                    Value="Auto" />
                            <Setter TargetName="RowDefinition0"
                                    Property="RowDefinition.Height"
                                    Value="*" />
                            <Setter TargetName="RowDefinition1"
                                    Property="RowDefinition.Height"
                                    Value="0" />
                            <Setter TargetName="HeaderPanel"
                                    Property="FrameworkElement.Margin"
                                    Value="-1,0,0,4" />
                            <Setter TargetName="HeaderBorder"
                                    Property="Border.BorderThickness"
                                    Value="1,0,0,0" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled"
                                 Value="False">
                            <Setter Property="TextElement.Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background"
                Value="{StaticResource BackgroundColor}" />
    </Style>

    <!-- Textbox -->
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Height"
                Value="{StaticResource ControlHeight}" />
        <Setter Property="Background"
                Value="{StaticResource ContainerBackground}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ControlDefaultBorderBrush}" />
        <Setter Property="Foreground"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="CaretBrush"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="SelectionBrush"
                Value="{StaticResource ControlPrimaryColorBackground}" />
        <Setter Property="IsInactiveSelectionHighlightEnabled"
                Value="True" />
        <Setter Property="SelectionOpacity"
                Value="0.7" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="KeyboardNavigation.TabNavigation"
                Value="None" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="AllowDrop"
                Value="true" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Focusable="false"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Opacity"
                                    TargetName="border"
                                    Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource ControlMouseOverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource ControlSelectedBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled"
                               Value="true" />
                    <Condition Property="IsSelectionActive"
                               Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush"
                        Value="{StaticResource ControlDisabledGlythColor}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!--ToolTip-->
    <Style TargetType="ToolTip">
        <Setter Property="Foreground"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}">
                    <Border Background="{StaticResource ContainerBackground}"
                            BorderBrush="{StaticResource ControlBrightDefaultBorderBrush}"
                            BorderThickness="1"
                            Margin="3"
                            Padding="6,4"
                            CornerRadius="2"
                            MaxWidth="360">
                        <ContentPresenter>
                            <ContentPresenter.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="TextWrapping"
                                            Value="Wrap" />
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Windows-->
    <ControlTemplate x:Key="WindowTemplateKey"
                     TargetType="{x:Type Window}">
        <Border BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}">
            <Grid>
                <AdornerDecorator>
                    <ContentPresenter />
                </AdornerDecorator>
                <ResizeGrip x:Name="WindowResizeGrip"
                            HorizontalAlignment="Right"
                            IsTabStop="false"
                            Visibility="Visible"
                            VerticalAlignment="Bottom" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode"
                               Value="CanResizeWithGrip" />
                    <Condition Property="WindowState"
                               Value="Normal" />
                </MultiTrigger.Conditions>
                <Setter Property="Visibility"
                        TargetName="WindowResizeGrip"
                        Value="Visible" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Simple Win32 Window style -->
    <Style x:Key="MainWindowStyle"
           TargetType="{x:Type Window}">
        <Setter Property="Foreground"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="Background"
                Value="{StaticResource BackgroundColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                        <AdornerDecorator>
                            <ContentPresenter />
                        </AdornerDecorator>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ResizeMode"
                     Value="CanResizeWithGrip">
                <Setter Property="Template"
                        Value="{StaticResource WindowTemplateKey}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CustomWindowStyle"
           TargetType="{x:Type Window}">
        <Setter Property="BorderBrush"
                Value="{StaticResource WindowBorderColor}" />
        <Setter Property="Background"
                Value="{StaticResource BackgroundColor}" />
        <Setter Property="Foreground"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="ResizeMode"
                Value="CanResizeWithGrip" />
        <Setter Property="WindowStyle"
                Value="SingleBorderWindow" />
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CaptionHeight="26"
                              ResizeBorderThickness="6"
                              CornerRadius="0"
                              GlassFrameThickness="0"
                              NonClientFrameEdges="None"
                              UseAeroCaptionButtons="False" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <AdornerDecorator Margin="0,30,0,0">
                                    <ContentPresenter />
                                </AdornerDecorator>
                                <Grid Height="30"
                                      x:Name="titlebar"
                                      Background="{TemplateBinding BorderBrush}"
                                      VerticalAlignment="Top"
                                      Margin="0">
                                    <DockPanel Margin="0,0,130,0">
                                        <Image HorizontalAlignment="Left"
                                               VerticalAlignment="Top"
                                               Margin="4,4,0,0"
                                               Source="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}"
                                               Height="24">
                                        </Image>
                                        <TextBlock Margin="5,3"
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Stretch"
                                                   TextWrapping="NoWrap"
                                                   FontSize="14"
                                                   Width="Auto"
                                                   Foreground="{StaticResource ControlDefaultForeground}"
                                                   Text="{Binding Title, RelativeSource={RelativeSource TemplatedParent}}"
                                                   Grid.Column="1"
                                                   TextAlignment="Left" />
                                    </DockPanel>
                                    <StackPanel Orientation="Horizontal"
                                                Grid.Column="0"
                                                HorizontalAlignment="Right">
                                        <Button x:Name="btnMinimize"
                                                Background="Transparent"
                                                BorderBrush="Transparent"
                                                Width="40"
                                                VerticalContentAlignment="Bottom"
                                                WindowChrome.IsHitTestVisibleInChrome="True"
                                                Click="Minimize_Event">
                                            <Rectangle Width="10"
                                                       VerticalAlignment="Center"
                                                       Margin="1 1 0 0"
                                                       Stroke="{StaticResource ControlGlythColor}"
                                                       StrokeThickness="1" />
                                        </Button>

                                        <Button x:Name="btnRestore"
                                                Background="Transparent"
                                                BorderBrush="Transparent"
                                                Width="40"
                                                WindowChrome.IsHitTestVisibleInChrome="True"
                                                Click="AutoMinimize_Event">
                                            <Grid Width="12"
                                                  Height="12">
                                                <Rectangle StrokeThickness="1"
                                                           Stroke="{StaticResource ControlGlythColor}"
                                                           Margin="3,0,0,3" />
                                                <Rectangle StrokeThickness="1"
                                                           Fill="{TemplateBinding BorderBrush}"
                                                           Stroke="{StaticResource ControlGlythColor}"
                                                           Margin="0 3 3 0" />
                                            </Grid>
                                        </Button>
                                        <Button x:Name="btnClose"
                                                Background="Transparent"
                                                BorderBrush="Transparent"
                                                Template="{DynamicResource CloseWindowButton}"
                                                Width="40"
                                                WindowChrome.IsHitTestVisibleInChrome="True"
                                                Click="CloseWindow_Event">
                                            <Grid Margin="0 1 0 0">
                                                <Line X1="0"
                                                      Y1="0"
                                                      X2="11"
                                                      Y2="11"
                                                      Stroke="{StaticResource ControlGlythColor}"
                                                      StrokeThickness="1" />
                                                <Line X1="0"
                                                      Y2="0"
                                                      Y1="11"
                                                      X2="11"
                                                      Stroke="{StaticResource ControlGlythColor}"
                                                      StrokeThickness="1" />
                                            </Grid>
                                        </Button>
                                    </StackPanel>
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="WindowState"
                     Value="Maximized">
                <Setter Property="BorderThickness"
                        Value="8" />
            </Trigger>
            <Trigger Property="WindowState"
                     Value="Normal">
                <Setter Property="BorderThickness"
                        Value="1" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Same window but auto maximize/minimize button removed. Tool window -->
    <Style x:Key="CustomToolWindowStyle"
           TargetType="{x:Type Window}">
        <Setter Property="BorderBrush"
                Value="{StaticResource WindowBorderColor}" />
        <Setter Property="Background"
                Value="{StaticResource BackgroundColor}" />
        <Setter Property="Foreground"
                Value="{StaticResource ControlDefaultForeground}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="ResizeMode"
                Value="NoResize" />
        <Setter Property="WindowStyle"
                Value="SingleBorderWindow" />
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CaptionHeight="26"
                              ResizeBorderThickness="0"
                              CornerRadius="0"
                              GlassFrameThickness="0"
                              NonClientFrameEdges="None"
                              UseAeroCaptionButtons="False" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <AdornerDecorator Margin="0,30,0,0">
                                    <ContentPresenter />
                                </AdornerDecorator>
                                <Grid Height="30"
                                      x:Name="titlebar"
                                      Background="{TemplateBinding BorderBrush}"
                                      VerticalAlignment="Top"
                                      Margin="0">
                                    <DockPanel Margin="0,0,130,0">
                                        <Image HorizontalAlignment="Left"
                                               VerticalAlignment="Top"
                                               Margin="4,4,0,0"
                                               Source="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}"
                                               Height="24" />
                                        <TextBlock Margin="5,3"
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Stretch"
                                                   FontSize="14"
                                                   Width="Auto"
                                                   Foreground="{StaticResource ControlDefaultForeground}"
                                                   Text="{Binding Title, RelativeSource={RelativeSource TemplatedParent}}"
                                                   Grid.Column="1"
                                                   TextAlignment="Left" />
                                    </DockPanel>
                                    <StackPanel Orientation="Horizontal"
                                                Grid.Column="0"
                                                HorizontalAlignment="Right">
                                        <!--<Button x:Name="btnMinimize"
                                                Background="Transparent"
                                                BorderBrush="Transparent"
                                                Width="40"
                                                VerticalContentAlignment="Bottom"
                                                WindowChrome.IsHitTestVisibleInChrome="True"
                                                Click="Minimize_Event">
                                            <Rectangle Width="10"
                                                       VerticalAlignment="Center"
                                                       Margin="1 1 0 0"
                                                       Stroke="{StaticResource ControlGlythColor}"
                                                       StrokeThickness="2" />
                                        </Button>-->
                                        <Button x:Name="btnClose"
                                                Background="Transparent"
                                                BorderBrush="Transparent"
                                                Template="{DynamicResource CloseWindowButton}"
                                                Width="40"
                                                WindowChrome.IsHitTestVisibleInChrome="True"
                                                Click="CloseWindow_Event">
                                            <Grid Margin="0 1 0 0">
                                                <Line X1="0"
                                                      Y1="0"
                                                      X2="11"
                                                      Y2="11"
                                                      Stroke="{StaticResource ControlGlythColor}"
                                                      StrokeThickness="2" />
                                                <Line X1="0"
                                                      Y2="0"
                                                      Y1="11"
                                                      X2="11"
                                                      Stroke="{StaticResource ControlGlythColor}"
                                                      StrokeThickness="2" />
                                            </Grid>
                                        </Button>
                                    </StackPanel>
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="WindowState"
                     Value="Maximized">
                <Setter Property="BorderThickness"
                        Value="8" />
            </Trigger>
            <Trigger Property="WindowState"
                     Value="Normal">
                <Setter Property="BorderThickness"
                        Value="1" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="CloseWindowButton"
                     TargetType="{x:Type Button}">
        <Border x:Name="border"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}"
                SnapsToDevicePixels="true"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch">
            <ContentPresenter x:Name="contentPresenter"
                              Focusable="False"
                              Margin="{TemplateBinding Padding}"
                              RecognizesAccessKey="True"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted"
                     Value="true">
                <Setter Property="BorderBrush"
                        TargetName="border"
                        Value="{StaticResource ControlMouseOverBorderBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver"
                     Value="true">
                <Setter Property="Background"
                        TargetName="border"
                        Value="#FFF01428" />
                <Setter Property="BorderBrush"
                        TargetName="border"
                        Value="#FFF01428" />
            </Trigger>
            <Trigger Property="IsPressed"
                     Value="true">
                <Setter Property="Background"
                        TargetName="border"
                        Value="#FF940A14" />
                <Setter Property="BorderBrush"
                        TargetName="border"
                        Value="#FF940A14" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Background"
                        TargetName="border"
                        Value="{StaticResource ControlBrightDefaultBackground}" />
                <Setter Property="BorderBrush"
                        TargetName="border"
                        Value="{StaticResource ControlBrightDefaultBorderBrush}" />
                <Setter Property="TextElement.Foreground"
                        TargetName="contentPresenter"
                        Value="{StaticResource ControlDisabledGlythColor}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--********************** Implicit Styles *********************** -->
    <Style TargetType="ComboBox"
           BasedOn="{StaticResource ComboboxStyle}" />

</ResourceDictionary>
